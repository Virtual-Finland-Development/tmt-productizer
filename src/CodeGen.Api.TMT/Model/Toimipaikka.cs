/*
 * TMT - Työpaikkailmoituksien hakurajapinta | Get Job postings
 *
 * <p>Tämän rajapinnan avulla voit hakea kaikki Työmarkkinatorilla julkaistut työpaikkailmoitukset.</p> <p>With this rest interface, you can retrieve all Job postings published in Job market Finland.</p>
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = CodeGen.Api.TMT.Client.OpenAPIDateConverter;

namespace CodeGen.Api.TMT.Model
{
    /// <summary>
    /// **fi:** Toimipaikka tai työskentelypaikka | **en:** Place of business or place of work
    /// </summary>
    [DataContract(Name = "Toimipaikka")]
    public partial class Toimipaikka : IEquatable<Toimipaikka>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Toimipaikka" /> class.
        /// </summary>
        /// <param name="postinumero">**fi:** Postinumero | **en:** Postcode.</param>
        /// <param name="postiosoite">**fi:** Postiosoite | **en:** Street address.</param>
        /// <param name="postitoimipaikka">**fi:** Postitoimipaikka | **en:** Post office.</param>
        /// <param name="toimipaikanNimi">**fi:** Toimipaikan tai työskentelypaikan nimi | **en:** The name of place of business or place of work.</param>
        public Toimipaikka(string postinumero = default(string), string postiosoite = default(string), string postitoimipaikka = default(string), List<LokalisoituArvo> toimipaikanNimi = default(List<LokalisoituArvo>))
        {
            this.Postinumero = postinumero;
            this.Postiosoite = postiosoite;
            this.Postitoimipaikka = postitoimipaikka;
            this.ToimipaikanNimi = toimipaikanNimi;
        }

        /// <summary>
        /// **fi:** Postinumero | **en:** Postcode
        /// </summary>
        /// <value>**fi:** Postinumero | **en:** Postcode</value>
        [DataMember(Name = "postinumero", EmitDefaultValue = false)]
        public string Postinumero { get; set; }

        /// <summary>
        /// **fi:** Postiosoite | **en:** Street address
        /// </summary>
        /// <value>**fi:** Postiosoite | **en:** Street address</value>
        [DataMember(Name = "postiosoite", EmitDefaultValue = false)]
        public string Postiosoite { get; set; }

        /// <summary>
        /// **fi:** Postitoimipaikka | **en:** Post office
        /// </summary>
        /// <value>**fi:** Postitoimipaikka | **en:** Post office</value>
        [DataMember(Name = "postitoimipaikka", EmitDefaultValue = false)]
        public string Postitoimipaikka { get; set; }

        /// <summary>
        /// **fi:** Toimipaikan tai työskentelypaikan nimi | **en:** The name of place of business or place of work
        /// </summary>
        /// <value>**fi:** Toimipaikan tai työskentelypaikan nimi | **en:** The name of place of business or place of work</value>
        [DataMember(Name = "toimipaikanNimi", EmitDefaultValue = false)]
        public List<LokalisoituArvo> ToimipaikanNimi { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Toimipaikka {\n");
            sb.Append("  Postinumero: ").Append(Postinumero).Append("\n");
            sb.Append("  Postiosoite: ").Append(Postiosoite).Append("\n");
            sb.Append("  Postitoimipaikka: ").Append(Postitoimipaikka).Append("\n");
            sb.Append("  ToimipaikanNimi: ").Append(ToimipaikanNimi).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Toimipaikka);
        }

        /// <summary>
        /// Returns true if Toimipaikka instances are equal
        /// </summary>
        /// <param name="input">Instance of Toimipaikka to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Toimipaikka input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Postinumero == input.Postinumero ||
                    (this.Postinumero != null &&
                    this.Postinumero.Equals(input.Postinumero))
                ) && 
                (
                    this.Postiosoite == input.Postiosoite ||
                    (this.Postiosoite != null &&
                    this.Postiosoite.Equals(input.Postiosoite))
                ) && 
                (
                    this.Postitoimipaikka == input.Postitoimipaikka ||
                    (this.Postitoimipaikka != null &&
                    this.Postitoimipaikka.Equals(input.Postitoimipaikka))
                ) && 
                (
                    this.ToimipaikanNimi == input.ToimipaikanNimi ||
                    this.ToimipaikanNimi != null &&
                    input.ToimipaikanNimi != null &&
                    this.ToimipaikanNimi.SequenceEqual(input.ToimipaikanNimi)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Postinumero != null)
                {
                    hashCode = (hashCode * 59) + this.Postinumero.GetHashCode();
                }
                if (this.Postiosoite != null)
                {
                    hashCode = (hashCode * 59) + this.Postiosoite.GetHashCode();
                }
                if (this.Postitoimipaikka != null)
                {
                    hashCode = (hashCode * 59) + this.Postitoimipaikka.GetHashCode();
                }
                if (this.ToimipaikanNimi != null)
                {
                    hashCode = (hashCode * 59) + this.ToimipaikanNimi.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
