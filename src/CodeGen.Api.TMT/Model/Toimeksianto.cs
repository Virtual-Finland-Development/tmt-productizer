/*
 * TMT - Työpaikkailmoituksien hakurajapinta | Get Job postings
 *
 * <p>Tämän rajapinnan avulla voit hakea kaikki Työmarkkinatorilla julkaistut työpaikkailmoitukset.</p> <p>With this rest interface, you can retrieve all Job postings published in Job market Finland.</p>
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = CodeGen.Api.TMT.Client.OpenAPIDateConverter;

namespace CodeGen.Api.TMT.Model
{
    /// <summary>
    /// **fi:** Toimeksiannon tiedot, jos palvelussuhteen tyyppi on &#39;*03*&#39; | **en:** Information of commission, if type of relationship is &#39;*03*&#39;
    /// </summary>
    [DataContract(Name = "Toimeksianto")]
    public partial class Toimeksianto : IEquatable<Toimeksianto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Toimeksianto" /> class.
        /// </summary>
        /// <param name="rekrytointiToimeksiantaja">**fi:** Rekrytointitoimeksiannon antaneen yrityksen nimi | **en:** Name of recruitment commission company.</param>
        /// <param name="rekrytointiToimeksianto">**fi:** Rekrytointitoimeksianto | **en:** Recruitment commission.</param>
        public Toimeksianto(string rekrytointiToimeksiantaja = default(string), bool rekrytointiToimeksianto = default(bool))
        {
            this.RekrytointiToimeksiantaja = rekrytointiToimeksiantaja;
            this.RekrytointiToimeksianto = rekrytointiToimeksianto;
        }

        /// <summary>
        /// **fi:** Rekrytointitoimeksiannon antaneen yrityksen nimi | **en:** Name of recruitment commission company
        /// </summary>
        /// <value>**fi:** Rekrytointitoimeksiannon antaneen yrityksen nimi | **en:** Name of recruitment commission company</value>
        [DataMember(Name = "rekrytointiToimeksiantaja", EmitDefaultValue = false)]
        public string RekrytointiToimeksiantaja { get; set; }

        /// <summary>
        /// **fi:** Rekrytointitoimeksianto | **en:** Recruitment commission
        /// </summary>
        /// <value>**fi:** Rekrytointitoimeksianto | **en:** Recruitment commission</value>
        [DataMember(Name = "rekrytointiToimeksianto", EmitDefaultValue = true)]
        public bool RekrytointiToimeksianto { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Toimeksianto {\n");
            sb.Append("  RekrytointiToimeksiantaja: ").Append(RekrytointiToimeksiantaja).Append("\n");
            sb.Append("  RekrytointiToimeksianto: ").Append(RekrytointiToimeksianto).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Toimeksianto);
        }

        /// <summary>
        /// Returns true if Toimeksianto instances are equal
        /// </summary>
        /// <param name="input">Instance of Toimeksianto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Toimeksianto input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.RekrytointiToimeksiantaja == input.RekrytointiToimeksiantaja ||
                    (this.RekrytointiToimeksiantaja != null &&
                    this.RekrytointiToimeksiantaja.Equals(input.RekrytointiToimeksiantaja))
                ) && 
                (
                    this.RekrytointiToimeksianto == input.RekrytointiToimeksianto ||
                    this.RekrytointiToimeksianto.Equals(input.RekrytointiToimeksianto)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.RekrytointiToimeksiantaja != null)
                {
                    hashCode = (hashCode * 59) + this.RekrytointiToimeksiantaja.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.RekrytointiToimeksianto.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
