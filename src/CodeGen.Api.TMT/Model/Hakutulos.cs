/*
 * TMT - Työpaikkailmoituksien hakurajapinta | Get Job postings
 *
 * <p>Tämän rajapinnan avulla voit hakea kaikki Työmarkkinatorilla julkaistut työpaikkailmoitukset.</p> <p>With this rest interface, you can retrieve all Job postings published in Job market Finland.</p>
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = CodeGen.Api.TMT.Client.OpenAPIDateConverter;

namespace CodeGen.Api.TMT.Model
{
    /// <summary>
    /// **fi:** Haun palauttamat tulokset | **en:** Search results
    /// </summary>
    [DataContract(Name = "Hakutulos")]
    public partial class Hakutulos : IEquatable<Hakutulos>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Hakutulos" /> class.
        /// </summary>
        /// <param name="ilmoitukset">**fi:** Haun palauttamat työpaikkailmoitukset | **en:** Job postings.</param>
        /// <param name="ilmoituksienMaara">**fi:** Ilmoituksien määrä tässä hakutuloksessa | **en:** Amount of resutls.</param>
        /// <param name="sivutus">sivutus.</param>
        public Hakutulos(List<Tyopaikkailmoitus> ilmoitukset = default(List<Tyopaikkailmoitus>), long ilmoituksienMaara = default(long), Sivutus sivutus = default(Sivutus))
        {
            this.Ilmoitukset = ilmoitukset;
            this.IlmoituksienMaara = ilmoituksienMaara;
            this.Sivutus = sivutus;
        }

        /// <summary>
        /// **fi:** Haun palauttamat työpaikkailmoitukset | **en:** Job postings
        /// </summary>
        /// <value>**fi:** Haun palauttamat työpaikkailmoitukset | **en:** Job postings</value>
        [DataMember(Name = "Ilmoitukset", EmitDefaultValue = false)]
        public List<Tyopaikkailmoitus> Ilmoitukset { get; set; }

        /// <summary>
        /// **fi:** Ilmoituksien määrä tässä hakutuloksessa | **en:** Amount of resutls
        /// </summary>
        /// <value>**fi:** Ilmoituksien määrä tässä hakutuloksessa | **en:** Amount of resutls</value>
        [DataMember(Name = "ilmoituksienMaara", EmitDefaultValue = false)]
        public long IlmoituksienMaara { get; set; }

        /// <summary>
        /// Gets or Sets Sivutus
        /// </summary>
        [DataMember(Name = "sivutus", EmitDefaultValue = false)]
        public Sivutus Sivutus { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Hakutulos {\n");
            sb.Append("  Ilmoitukset: ").Append(Ilmoitukset).Append("\n");
            sb.Append("  IlmoituksienMaara: ").Append(IlmoituksienMaara).Append("\n");
            sb.Append("  Sivutus: ").Append(Sivutus).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Hakutulos);
        }

        /// <summary>
        /// Returns true if Hakutulos instances are equal
        /// </summary>
        /// <param name="input">Instance of Hakutulos to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Hakutulos input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Ilmoitukset == input.Ilmoitukset ||
                    this.Ilmoitukset != null &&
                    input.Ilmoitukset != null &&
                    this.Ilmoitukset.SequenceEqual(input.Ilmoitukset)
                ) && 
                (
                    this.IlmoituksienMaara == input.IlmoituksienMaara ||
                    this.IlmoituksienMaara.Equals(input.IlmoituksienMaara)
                ) && 
                (
                    this.Sivutus == input.Sivutus ||
                    (this.Sivutus != null &&
                    this.Sivutus.Equals(input.Sivutus))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Ilmoitukset != null)
                {
                    hashCode = (hashCode * 59) + this.Ilmoitukset.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.IlmoituksienMaara.GetHashCode();
                if (this.Sivutus != null)
                {
                    hashCode = (hashCode * 59) + this.Sivutus.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
