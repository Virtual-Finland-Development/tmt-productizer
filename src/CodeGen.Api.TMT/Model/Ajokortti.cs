/*
 * TMT - Työpaikkailmoituksien hakurajapinta | Get Job postings
 *
 * <p>Tämän rajapinnan avulla voit hakea kaikki Työmarkkinatorilla julkaistut työpaikkailmoitukset.</p> <p>With this rest interface, you can retrieve all Job postings published in Job market Finland.</p>
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = CodeGen.Api.TMT.Client.OpenAPIDateConverter;

namespace CodeGen.Api.TMT.Model
{
    /// <summary>
    /// **fi:** Ajokortit | **en:** Driving licenses
    /// </summary>
    [DataContract(Name = "Ajokortti")]
    public partial class Ajokortti : IEquatable<Ajokortti>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Ajokortti" /> class.
        /// </summary>
        /// <param name="ajokortinLisatieto">**fi:** Ajokortin lisätieto | **en:** Additional information for driving licenses.</param>
        /// <param name="vaaditutAjokorttiluokat">vaaditutAjokorttiluokat.</param>
        public Ajokortti(List<LokalisoituArvo> ajokortinLisatieto = default(List<LokalisoituArvo>), List<string> vaaditutAjokorttiluokat = default(List<string>))
        {
            this.AjokortinLisatieto = ajokortinLisatieto;
            this.VaaditutAjokorttiluokat = vaaditutAjokorttiluokat;
        }

        /// <summary>
        /// **fi:** Ajokortin lisätieto | **en:** Additional information for driving licenses
        /// </summary>
        /// <value>**fi:** Ajokortin lisätieto | **en:** Additional information for driving licenses</value>
        [DataMember(Name = "ajokortinLisatieto", EmitDefaultValue = false)]
        public List<LokalisoituArvo> AjokortinLisatieto { get; set; }

        /// <summary>
        /// Gets or Sets VaaditutAjokorttiluokat
        /// </summary>
        [DataMember(Name = "vaaditutAjokorttiluokat", EmitDefaultValue = false)]
        public List<string> VaaditutAjokorttiluokat { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Ajokortti {\n");
            sb.Append("  AjokortinLisatieto: ").Append(AjokortinLisatieto).Append("\n");
            sb.Append("  VaaditutAjokorttiluokat: ").Append(VaaditutAjokorttiluokat).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Ajokortti);
        }

        /// <summary>
        /// Returns true if Ajokortti instances are equal
        /// </summary>
        /// <param name="input">Instance of Ajokortti to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Ajokortti input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AjokortinLisatieto == input.AjokortinLisatieto ||
                    this.AjokortinLisatieto != null &&
                    input.AjokortinLisatieto != null &&
                    this.AjokortinLisatieto.SequenceEqual(input.AjokortinLisatieto)
                ) && 
                (
                    this.VaaditutAjokorttiluokat == input.VaaditutAjokorttiluokat ||
                    this.VaaditutAjokorttiluokat != null &&
                    input.VaaditutAjokorttiluokat != null &&
                    this.VaaditutAjokorttiluokat.SequenceEqual(input.VaaditutAjokorttiluokat)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AjokortinLisatieto != null)
                {
                    hashCode = (hashCode * 59) + this.AjokortinLisatieto.GetHashCode();
                }
                if (this.VaaditutAjokorttiluokat != null)
                {
                    hashCode = (hashCode * 59) + this.VaaditutAjokorttiluokat.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
