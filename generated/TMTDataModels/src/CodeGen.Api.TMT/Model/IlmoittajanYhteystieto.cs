/*
 * TMT - Työpaikkailmoituksien hakurajapinta | Get Job postings
 *
 * <p>Tämän rajapinnan avulla voit hakea kaikki Työmarkkinatorilla julkaistut työpaikkailmoitukset.</p> <p>With this rest interface, you can retrieve all Job postings published in Job market Finland.</p>
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = CodeGen.Api.TMT.Client.OpenAPIDateConverter;

namespace CodeGen.Api.TMT.Model
{
    /// <summary>
    /// **fi:** Ilmoittajan yhteystiedot | **en:** Contact details of the recruiter
    /// </summary>
    [DataContract(Name = "IlmoittajanYhteystieto")]
    public partial class IlmoittajanYhteystieto : IEquatable<IlmoittajanYhteystieto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IlmoittajanYhteystieto" /> class.
        /// </summary>
        /// <param name="puhelinNro">**fi:** Puhelinnumero | **en:** Telephone number.</param>
        /// <param name="sposti">**fi:** Sähköpostiosoite | **en:** E-mail address.</param>
        public IlmoittajanYhteystieto(string puhelinNro = default(string), string sposti = default(string))
        {
            this.PuhelinNro = puhelinNro;
            this.Sposti = sposti;
        }

        /// <summary>
        /// **fi:** Puhelinnumero | **en:** Telephone number
        /// </summary>
        /// <value>**fi:** Puhelinnumero | **en:** Telephone number</value>
        [DataMember(Name = "puhelinNro", EmitDefaultValue = false)]
        public string PuhelinNro { get; set; }

        /// <summary>
        /// **fi:** Sähköpostiosoite | **en:** E-mail address
        /// </summary>
        /// <value>**fi:** Sähköpostiosoite | **en:** E-mail address</value>
        [DataMember(Name = "sposti", EmitDefaultValue = false)]
        public string Sposti { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IlmoittajanYhteystieto {\n");
            sb.Append("  PuhelinNro: ").Append(PuhelinNro).Append("\n");
            sb.Append("  Sposti: ").Append(Sposti).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as IlmoittajanYhteystieto);
        }

        /// <summary>
        /// Returns true if IlmoittajanYhteystieto instances are equal
        /// </summary>
        /// <param name="input">Instance of IlmoittajanYhteystieto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(IlmoittajanYhteystieto input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.PuhelinNro == input.PuhelinNro ||
                    (this.PuhelinNro != null &&
                    this.PuhelinNro.Equals(input.PuhelinNro))
                ) && 
                (
                    this.Sposti == input.Sposti ||
                    (this.Sposti != null &&
                    this.Sposti.Equals(input.Sposti))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PuhelinNro != null)
                {
                    hashCode = (hashCode * 59) + this.PuhelinNro.GetHashCode();
                }
                if (this.Sposti != null)
                {
                    hashCode = (hashCode * 59) + this.Sposti.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
